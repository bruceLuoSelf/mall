/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

//@require @packageOverrides
Ext.Loader.setConfig({
    enabled: true
});

/**********************************************************************
 * 当前登录用户
 */
var loginUser, imageSizeMap, orderAutoLoadTime, subCommissionBase, resourceUrl, commonTreeNodes, recruitBusinessTreeNodes, makeOrderTreeNodes, customerServiceTreeNodes, nomalManagerTreeNodes, systemManagerTreeNodes;
var anXinBuyManagerTreeNodes, guaranteeTreeNodes, receivingTreeNodes;

(function () {
    var queryCurrentInfo = function () {
        //Ajax请求当前登录用户信息
        Ext.Ajax.request({
            url: './main/currentLoginUserInfo.action',
            async: false,
            success: function (response, opts) {
                var result = Ext.decode(response.responseText);
                //设置当前登录用户信息
                loginUser = result.currentUser;
            }
        });
    };
    queryCurrentInfo();
    setInterval(function () {
        queryCurrentInfo();
    }, Common.config.UPDATE_INFO_INTERVAL * 1000);
    //Ajax请求当前系统配置信息
    Ext.Ajax.request({
        url: './main/sysConfig.action',
        success: function (response, opts) {
            var result = Ext.decode(response.responseText);
            //设置当前系统配置的图片大小信息
            imageSizeMap = result.imageSizeMap;
            //设置订单自动刷新时间
            orderAutoLoadTime = result.orderAutoLoadTime;
            //公司得到拥金的比例
            subCommissionBase = result.subCommissionBase;
        }
    });
    //公用菜单项
    commonTreeNodes = [{
        text: '系统管理', expanded: true,
        children: [{
            text: '修改密码', leaf: true, id: 'modifyPassword'
        }]
    }];
    //招商菜单项
    recruitBusinessTreeNodes = [{
        text: '商品管理', expanded: true,
        children: [{
            text: '库存管理', leaf: true, id: 'repositoryManager'
        }, {
            text: '卖家审核', leaf: true, id: 'sellerManager'
        }, {
            text: '游戏通用库存限制配置', leaf: true, id: 'RepositoryConfineManager'
        }, {
            text: '游戏详细库存限制配置', leaf: true, id: 'GameRepositoryManager'
        }, {
            text: '参考价后台查询', leaf: true, id: 'ReferencePriceManager'
        }]
    }];
    shConfigTreeNodes = [{
        text: '收货配置管理', expanded: true,
        children: [{
            text: '收货游戏配置管理', leaf: true, id: 'shGameConfigManager'
        }, {
            text: '收货游戏交易配置', leaf: true, id: 'shGameTradeManager'
        },{
            text: '收货系统配置', leaf: true, id: 'shSystemConfigManager'
        }, {
            text: '收货地址配置', leaf: true, id: 'shAddressManager'
        }, {
            text: '交易类目配置', leaf: true, id: 'gameCategoryManager'
        }, {
            text: '收货模式配置', leaf: true, id: 'shTradeManager'
        }, {
            text: '收货角色管理', leaf: true, id: 'shGameAccountManager'
        }, {
            text: '采购商管理', leaf: true, id: 'shPurchaseManager'
        }, {
            text: '采购单管理', leaf: true, id: 'shPurchaseOrderManager'
        }, {
            text: '客服QQ管理', leaf: true, id: 'qqOnLineManager'
        }, {
            text: '收货商游戏属性配置', leaf: true, id: 'shPurchaseGameManager'
        }, {
            text: '主游戏配置', leaf: true, id: 'MainGameConfigManager'
        }, {
            text: '异常转人工开关配置', leaf: true, id: 'machineArtificialConfigManager'
        }, {
            text: '收货信息配置', leaf: true, id: 'deliveryConfigManager'
        }, {
            text: '等级携带上限配置', leaf: true, id: 'levelCarryLimitManager'
        }]
    }];
    shOrderTreeNodes = [{
        text: '收货订单管理', expanded: true,
        children: [{
            text: '收货订单管理', leaf: true, id: 'deliveryOrderManager'
        }, {
            text: '申诉订单管理', leaf: true, id: 'ApperalDeliveryOrderManager'
        }, {
            text: '收货交易流水', leaf: true, id: 'deliveryMoneyCountManager'
        }, {
            text: '分仓日志', leaf: true, id: 'splitRepositoryLogManager'
        }, {
            text: '分仓管理', leaf: true, id: 'splitRepositoryRequestManager'
        }, {
            text: '出货订单日志', leaf: true, id: 'deliveryOrderLogManager'
        }]
    }];
    shBlackListTreeNodes = [{
        text: '黑名单管理', expanded: true,
        children: [{
            text: '黑名单', leaf: true, id: 'BlackListManager'
        }]
    }];
    shFinanceTreeNodes = [{
        text: '收货资金管理', expanded: true,
        children: [{
            text: '充值明细', leaf: true, id: 'shRechargeManager'
        }, {
            text: '付款明细', leaf: true, id: 'shPayDetailManager'
        }, {
            text: '退款审核', leaf: true, id: 'refundOrderManager'
        }, {
            text: '资金明细', leaf: true, id: 'fundDetailManager'
        }, {
            text: '资金统计平衡表', leaf: true, id: 'shFundStatisticsManager'
        }]
    }];
    //做单菜单项
    makeOrderTreeNodes = [{
        text: '订单管理', expanded: true,
        children: [{
            text: '出库订单', leaf: true, id: 'shippingManager'
        }, {
            text: '我的订单', leaf: true, id: 'orderManager'
        }, {
            text: '掉单处理', leaf: true, id: 'syncOrderPaymentStatusManager'
        }, {
            text: '超时订单', leaf: true, id: 'overTimeOrderManager'
        }, /*{
         text: '订单导出', leaf: true, id: 'exportOrderManager'
         }*/]
    }];
    //客服菜单项
    customerServiceTreeNodes = Ext.Array.merge(makeOrderTreeNodes, [{
        text: '资金管理', expanded: true,
        children: [{
            text: '交易流水导出', leaf: true, id: 'exportTransactionFlow'
        }, {
            text: '交易统计', leaf: true, id: 'tradingStatistics'
        }/*,{
         text: '区服交易信息', leaf: true, id: 'gameTrading'
         }*/]
    }], recruitBusinessTreeNodes);
    //普通管理员菜单项
    nomalManagerTreeNodes = [{
        text: '系统配置', expanded: true,
        children: [{
            text: '价格管理', leaf: true, id: 'goodsManager'
        }, {
            text: '通货配置', leaf: true, id: 'CurrencyConfigManager'
        }, {
            text: '游戏配置管理', leaf: true, id: 'gameConfigManager'
        }, {
            text: '自动配单权限管理', leaf: true, id: 'configPowerManager'
        }, {
            text: '防骗短信配置', leaf: true, id: 'textMessageManager'
        }, {
            text: '寄售全自动配置', leaf: true, id: 'autoDeliverSettingManager'
        }, {
            text: '合区合服配置', leaf: true, id: 'transferFileManager'
        }, {
            text: '工作室管理', leaf: true, id: 'FirmInfoManager'
        }, {
            text: '工作室账号管理', leaf: true, id: 'FirmsAccountManager'
        }]
    }, {
        text: '优惠券管理', expanded: true,
        children: [{
            text: '优惠券记录', leaf: true, id: 'discountCouponManager'
        }]
    }, {
        text: '客服评价', expanded: true,
        children: [{
            text: '评价统计', leaf: true, id: 'serviceEvaluateManager'
        }, {
            text: '评价记录', leaf: true, id: 'orderEvaluateManager'
        }]
    }, {
        text: '用户管理', expanded: true,
        children: [{
            text: '用户信息管理', leaf: true, id: 'userManager'
        }, {
            text: '用户信息管理日志', leaf: true, id: 'userLoginManager'
        }]
    }, {
        text: '系统监控', expanded: true,
        children: [/*{
         text: '日志监控', leaf: true, id: 'logManager'
         },*/{
            text: '订单日志', leaf: true, id: 'orderLogManager'
        }, {
            text: '库存日志', leaf: true, id: 'repositoryLogManager'
        }, {
            text: '工作室操作日志', leaf: true, id: 'FirmLogManager'
        }, {
            text: '商品日志', leaf: true, id: 'goodsLogManager'
        }, {
            text: '已发送短信', leaf: true, id: 'sentMessageManager'
        }]
    }];
    //安心买配置管理菜单项
    anXinBuyManagerTreeNodes = [{
        text: '安心买配置管理', expanded: true,
        children: [{
            text: '游戏币菜单图标配置', leaf: true, id: 'anXinBuyManager'
        }, {
            text: '店铺配置', leaf: true, id: 'sellerSettingManager'
        }, {
            text: '友情提示配置', leaf: true, id: 'warningManager'////ZW_C_JB_00008_20170515 ADD
        }]
    }];
    guaranteeTreeNodes = [{
        text: '发货管理', expanded: true,
        children: [{
            text: '担保订单移交', leaf: true, id: 'transferOrderManager'
        }]
    }];
    receivingTreeNodes = [/*{
     text: '收货管理', expanded: true,
     children: [{
     text: '担保收货', leaf: true, id: 'bizOfferManager'
     }]
     }*/];
    customerServiceNodes = [{
        text: '售后保障管理', expanded: true,
        children: [{
            text: '保险功能设置', leaf: true, id: 'insuranceSettingsManager'
        }, {
            text: '保费统计查询', leaf: true, id: 'insuranceFeeLogManager'
        }]
    }];
    //系统管理员菜单项
    systemManagerTreeNodes = Ext.Array.merge(customerServiceTreeNodes, guaranteeTreeNodes, nomalManagerTreeNodes, customerServiceNodes, anXinBuyManagerTreeNodes, receivingTreeNodes, commonTreeNodes, shConfigTreeNodes, shOrderTreeNodes, shBlackListTreeNodes, shFinanceTreeNodes);
    // systemManagerTreeNodes = Ext.Array.merge(customerServiceTreeNodes,guaranteeTreeNodes, nomalManagerTreeNodes, customerServiceNodes, anXinBuyManagerTreeNodes,receivingTreeNodes,commonTreeNodes);
})();


Ext.define('SystemUtil', {
    singleton: true,
    getImageUrl: function (url, type) {
        if (Ext.isEmpty(url)) {
            return url;
        }
        var strs = url.split('.jpg');
        if (strs.length == 2) {
            return Common.config.RESOURCE_URL + strs[0] + imageSizeMap[type] + '.jpg';
        }
        strs = url.split('.png');
        if (strs.length == 2) {
            return Common.config.RESOURCE_URL + strs[0] + imageSizeMap[type] + '.png';
        }
        strs = url.split('.gif');
        if (strs.length == 2) {
            return Common.config.RESOURCE_URL + strs[0] + imageSizeMap[type] + '.gif';
        }
        strs = url.split('.bmp');
        if (strs.length == 2) {
            return Common.config.RESOURCE_URL + strs[0] + imageSizeMap[type] + '.bmp';
        }
        return url;
    },
    getOrderAutoLoadTime: function () {
        return orderAutoLoadTime;
    },
    getSubCommissionBase: function () {
        return subCommissionBase;
    }
});

Ext.define('CurrentUser', {
    singleton: true,
    /**
     * 当前登录用户对象
     */
    getCurrentUser: function () {
        if (!Ext.isEmpty(loginUser)) {
            return loginUser;
        }
    },
    /**
     * 当前登录用户的用户名
     */
    getRealName: function () {
        if (!Ext.isEmpty(loginUser)) {
            return CurrentUser.getCurrentUser().realName;
        }
    },
    /**
     * 当前登录用户的用户名
     */
    getLoginAccount: function () {
        if (!Ext.isEmpty(loginUser)) {
            return CurrentUser.getCurrentUser().loginAccount;
        }
    },
    /**
     * 当前登录用户类型编码
     */
    getUserTypeCode: function () {
        if (!Ext.isEmpty(loginUser)) {
            return CurrentUser.getCurrentUser().userType;
        }
    },
    /**
     * 当前登录用户类型名称
     */
    getUserTypeName: function () {
        if (!Ext.isEmpty(loginUser)) {
            return DataDictionary.rendererSubmitToDisplay(CurrentUser.getUserTypeCode());
        }
    },
    /**
     * 当前登录用户菜单
     */
    getUserMenus: function () {
        if (!Ext.isEmpty(loginUser)) {
            var userMenus = [];
            if (loginUser.loginAccount == "wangjj@5173.com" || loginUser.loginAccount == "ymq@5173.com") {
                userMenus = Ext.Array.merge([{
                    text: '发放优惠券', expanded: true,
                    children: [{
                        text: '发放优惠券', leaf: true, id: 'generateCouponManager'
                    }]
                }], systemManagerTreeNodes);
                return userMenus;
            }
            //CurrentUser.getUserTypeCode();
            switch (CurrentUser.getUserTypeCode()) {
                case 1:
                    userMenus = Ext.Array.merge([{
                        text: '订单管理', expanded: true,
                        children: [{
                            text: '出库订单', leaf: true, id: 'shippingManager'
                        }, {
                            text: '我的订单', leaf: true, id: 'orderManager'
                        }, {
                            text: '掉单处理', leaf: true, id: 'syncOrderPaymentStatusManager'
                        }]
                    }], [{
                        text: '客服评价', expanded: true,
                        children: [{
                            text: '评价记录', leaf: true, id: 'orderEvaluateManager'
                        }]
                    }], [{
                        text: '商品管理', expanded: true,
                        children: [{
                            text: '库存管理', leaf: true, id: 'repositoryManager'
                        }]
                    }], guaranteeTreeNodes, [{
                        text: '系统监控', expanded: true,
                        children: [{
                            text: '订单日志', leaf: true, id: 'orderLogManager'
                        }]
                    }], commonTreeNodes);
                    break;
                case 2:
                    userMenus = Ext.Array.merge([{
                        text: '资金管理', expanded: true,
                        children: [{
                            text: '交易流水导出', leaf: true, id: 'exportTransactionFlow'
                        }, {
                            text: '交易统计', leaf: true, id: 'tradingStatistics'
                        }]
                    }], commonTreeNodes);

                    /*{
                     text: '卖家审核', leaf: true, id: 'sellerManager'
                     }*/

                    break;
                case 3:
                    userMenus = systemManagerTreeNodes;
                    break;
                case 5:
                    userMenus = Ext.Array.merge(recruitBusinessTreeNodes, receivingTreeNodes);
                    break;
                /*case 6:
                 userMenus = Ext.Array.merge(makeOrderTreeNodes, [{
                 text: '收货管理', expanded: true,
                 children: [{
                 text: '担保收货', leaf: true, id: 'bizOfferManager'
                 }]
                 }]);
                 break;*/
                case 7:
                    userMenus = Ext.Array.merge(commonTreeNodes, recruitBusinessTreeNodes, receivingTreeNodes);
                    break;
                case 8:// 寄售客服
                    userMenus = Ext.Array.merge([{
                        text: '订单管理', expanded: true,
                        children: [{
                            text: '出库订单', leaf: true, id: 'shippingManager'
                        }, {
                            text: '我的订单', leaf: true, id: 'orderManager'
                        }]
                    }], [{
                        text: '客服评价', expanded: true,
                        children: [{
                            text: '评价记录', leaf: true, id: 'orderEvaluateManager'
                        }]
                    }], commonTreeNodes);
                    break;
            }
            return userMenus;
        }
    }
});

Ext.application({
    models: [
        'GoodsModel',
        'OrderModel',
        "LogModel",
        'ConfigResultModel',
        'RepositoryModel',
        'GameConfigModel',
        'SellerModel',
        'TransactionModel',
        'ShippingModel',
        'BizOfferModel',
        'UserModel',
        'gameTradingModel',
        'ConfigPowerModel',
        'DeliverySubOrderModel',
        'ShOrderLogModel',
        'PayDetailModel',
        'MainGameConfigModel',
        'DeliveryConfigModel',
        'SplitRepositorySubRequestModel'
    ],
    stores: [
        'MenuTreeStore',
        'GoodsStore',
        "LogStore",
        'OrderStore',
        'ConfigResultStore',
        'RepositoryStore',
        'GameConfigStore',
        'TransactionStore',
        'ShippingStore',
        'SellerStore',
        'BizOfferStore',
        'UserStore',
        'gameTradingStore',
        'ConfigPowerStore',
        'DeliveryConfigStore',
        'ApperalDeliveryOrderStore'
    ],
    views: [
        'Viewport',
        "logManager",
        'userManager',
        'adminSubUserManager',
        'goodsManager',
        'modifyPassword',
        'repositoryManager',
        'gameConfigManager',
        'exportTransactionFlow',
        'shippingManager',
        'sellerManager',
        'bizOfferManager',
        'orderManager',
        'gameTrading',
        'configPowerManager',
        'syncOrderPaymentStatusManager',
        'overTimeOrderManager'
    ],
    autoCreateViewport: true,
    name: 'MyApp'
});
Ext.QuickTips.init();