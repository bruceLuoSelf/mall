<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd"
	default-lazy-init="true">

	<description>FACADE DAO公共配置文件 </description>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!-- 定义易受环境影响的变量 -->
	<context:property-placeholder
		ignore-resource-not-found="true"
		location="classpath*:/META-INF/application.mybatis.properties" />

	<!-- 事务管理器配置, 使用jdbc事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- MyBatis配置
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/META-INF/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:/META-INF/mapper/*.xml" />
	</bean>-->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="configLocation" value="classpath:/META-INF/mybatis-config.xml" />
		<property name="plugins">
			<array>
				<bean class="com.wzitech.gamegold.usermgmt.dao.CatMybatisPlugin"></bean>
			</array>
		</property>
		<property name="mapperLocations">
			<list>
				<value>classpath*:/META-INF/mapper/*.xml</value>
			</list>
		</property>
	</bean>
		
	<!-- production环境 -->
 	<beans profile="production">
		<!-- User Redis配置 -->
		<bean id="userJedisFactory"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
			p:host-name="${redis.user.host}" p:port="${redis.user.port}" p:use-pool="true" p:timeout="60000"/>
	
		<!-- User Redis Template配置 -->
		<bean id="userRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
			p:connection-factory-ref="userJedisFactory" />
		
		<!-- 数据源配置, 使用应用中的DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>

		<!-- spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value -->
		<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
			<property name="caches">
				<set>
					<!-- 这里可以配置多个redis -->
					<!-- <bean class="com.cn.util.RedisCache">
                         <property name="redisTemplate" ref="redisTemplate" />
                         <property name="name" value="default"/>
                    </bean> -->
					<bean class="com.wzitech.gamegold.usermgmt.dao.redis.impl.RedisCache">
						<property name="redisTemplate" ref="userRedisTemplate" />
						<property name="name" value="default"/>
						<!-- common名称要在类或方法的注解中使用 -->
					</bean>
				</set>
			</property>
		</bean>
	</beans>
	<!-- development环境 -->
	<beans profile="development">
		<!-- User Redis配置 -->
		<bean id="userJedisFactory"
			class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
			p:host-name="${redis.user.host}" p:port="${redis.user.port}" p:use-pool="true" />
	
		<!-- User Redis Template配置 -->
		<bean id="userRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
			p:connection-factory-ref="userJedisFactory" />

		<!-- spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value -->
		<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
			<property name="caches">
				<set>
					<!-- 这里可以配置多个redis -->
					<!-- <bean class="com.cn.util.RedisCache">
                         <property name="redisTemplate" ref="redisTemplate" />
                         <property name="name" value="default"/>
                    </bean> -->
					<bean class="com.wzitech.gamegold.usermgmt.dao.redis.impl.RedisCache">
						<property name="redisTemplate" ref="userRedisTemplate" />
						<property name="name" value="default"/>
						<!-- common名称要在类或方法的注解中使用 -->
					</bean>
				</set>
			</property>
		</bean>
		
		<!-- 数据源配置, 使用应用中的DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>
	</beans>


</beans>